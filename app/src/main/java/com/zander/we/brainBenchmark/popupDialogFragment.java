package com.zander.we.brainBenchmark;import android.app.Activity;import android.app.AlertDialog;import android.app.Dialog;import android.app.DialogFragment;import android.content.DialogInterface;import android.os.Bundle;import android.util.Log;import java.util.Hashtable;public class popupDialogFragment extends DialogFragment {    final static String CONSTANT_SHOW_WHAT = "SHOW_WHAT";    Hashtable<Integer,Integer> mShowWhatVsMsgId = new Hashtable<Integer,Integer>();    @Override    public Dialog onCreateDialog(Bundle savedInstanceState) {        mShowWhatVsMsgId.put(PopupCondition.POPUP_CONDITION_WRONG.getValue(), R.string.info_fail);        mShowWhatVsMsgId.put(PopupCondition.POPUP_CONDITION_ABOUT.getValue(), R.string.info_about);        mShowWhatVsMsgId.put(PopupCondition.POPUP_CONDITION_TIME_IS_UP.getValue(), R.string.info_time_is_up);        mShowWhatVsMsgId.put(PopupCondition.POPUP_CONDITION_IF_EXIT.getValue(), R.string.info_if_exit);        // Use the Builder class for convenient dialog construction        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),AlertDialog.THEME_HOLO_DARK);        final int showWhat = getArguments().getInt(CONSTANT_SHOW_WHAT);        final int msgId = mShowWhatVsMsgId.get(showWhat);        final Activity curActivity = getActivity();        DialogInterface.OnClickListener clickListenerToTerminate = new DialogInterface.OnClickListener() {            @Override            public void onClick(DialogInterface dialog, int id) {                if (curActivity instanceof MajorRunningActivity)                {                    ((MajorRunningActivity) curActivity).ChangeState( ActivityAction.ACTIVITY_ACTION_TERMINATE);                }            }        };        DialogInterface.OnClickListener clickListenerToResume = new DialogInterface.OnClickListener() {            @Override            public void onClick(DialogInterface dialog, int id) {                if (curActivity instanceof MajorRunningActivity)                {                    ((MajorRunningActivity) curActivity).ChangeState( ActivityAction.ACTIVITY_ACTION_RESUME);                }            }        };        DialogInterface.OnClickListener clickListenerToDoNothing = new DialogInterface.OnClickListener() {            @Override            public void onClick(DialogInterface dialog, int id) {                return;            }        };        builder.setMessage(msgId);        switch(PopupCondition.fromInteger(showWhat))        {            case POPUP_CONDITION_IF_EXIT:                builder.setNegativeButton(R.string.str_stop, clickListenerToTerminate).setPositiveButton(R.string.str_resume, clickListenerToResume);                break;            case POPUP_CONDITION_TIME_IS_UP:            case POPUP_CONDITION_WRONG:                builder.setPositiveButton(R.string.str_close, clickListenerToTerminate);                break;            case POPUP_CONDITION_ABOUT:                builder.setPositiveButton(R.string.str_close, clickListenerToDoNothing);                break;        }        // Create the AlertDialog object and return it        return builder.create();    }    @Override    public void onDismiss (DialogInterface dialog)    {        super.onDismiss(dialog);        Log.d("info", "dialog's onMiss()");    }}